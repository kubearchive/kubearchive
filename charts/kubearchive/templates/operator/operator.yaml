{{- $controlPlane := "controller-manager" -}}
{{- $port := 8081 -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/created-by: {{ tpl .Values.operator.name . }}
    app.kubernetes.io/instance: {{ tpl .Values.operator.name . }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/part-of: {{ tpl .Values.operator.name . }}
    control-plane: {{ $controlPlane }}
  name: {{ tpl .Values.operator.name . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: {{ $controlPlane }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: {{ $controlPlane }}
    spec:
      containers:
        - name: kube-rbac-proxy
          args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - name: manager
          args:
          {{- if .Values.operator.debug }}
            - --
          {{- end }}
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          env:
            - name: KUBEARCHIVE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBEARCHIVE_OTEL_MODE
              value: "disabled"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: ""
          image: {{ .Values.operator.image }}
          {{- if not .Values.operator.debug }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ $port }}
            initialDelaySeconds: 15
            periodSeconds: 20
          {{- end }}
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          {{- if not .Values.operator.debug }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ $port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          {{- end }}
      {{- if not .Values.operator.debug }}
      securityContext:
        runAsNonRoot: true
      {{- end }}
      serviceAccountName: {{ tpl .Values.operator.name . }}
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ tpl .Values.operator.secret . }}
