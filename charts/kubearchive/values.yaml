# Default values for kn-api-server-source.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

---
# template values relevant to all of kubearchive
kubearchive:
  # the name of the namespace to deploy kubearchive into
  namespace: "kubearchive"
  # RoleBinding name
  roleBinding: "kubearchive"
  # Name of Service Account
  serviceAccount: "kubearchive"

# values used to create the api-server
apiServer:
  name: "{{ .Release.Name }}-api-server"
  # NOTE - Helm does not resolve the `ko` path. The path needs to be set on the `helm install` command.
  # For example:
  # helm install -n default <chart-name> charts/kubearchive \
  # --set-string apiServer.image=$(ko build github.com/kubearchive/kubearchive/cmd/api)
  image: ko://github.com/kubearchive/kubearchive/cmd/api
  # NOTE - To debug the apiServer the `ko build` command must be the following way:
  # KO_DEFAULTBASEIMAGE=gcr.io/k8s-skaffold/skaffold-debug-support/go:latest ko build --disable-optimizations \
  # github.com/kubearchive/kubearchive/cmd/api
  debug: false
  # If true, OpenTelemetry instrumentation will be enabled for the api server
  observability: false
  # NOTE - This resource must include the certificate suffix to work
  cert: "{{ tpl .Values.apiServer.name . }}-certificate"
  secret: "{{ tpl .Values.apiServer.name . }}-tls"
  port: 8081
  testSA: "{{ .Release.Name }}-test"

# values used to create a sink
sink:
  name: "{{ .Release.Name }}-sink"
  # NOTE - Helm does not resolve the `ko` path. The path needs to be set on the `helm install` command.
  # For example:
  # helm install -n default <chart-name> charts/kubearchive \
  # --set-string apiServer.image=$(ko build github.com/kubearchive/kubearchive/cmd/sink)
  image: ko://github.com/kubearchive/kubearchive/cmd/sink
  protocol: TCP
  port: 80
  # 8080 is the port that the cloud events sdk uses by default when listening for events
  targetPort: 8080
  # number of kubearchive sink pods that should be deployed
  replicas: 1
  # If true, OpenTelemetry instrumentation will be enabled for the sink
  observability: false

operator:
  # NOTE - Helm does not resolve the `ko` path. The path needs to be set on the `helm install` command.
  # For example:
  # helm install -n default <chart-name> charts/kubearchive \
  # --set-string operator.image=$(ko build github.com/kubearchive/kubearchive/cmd/operator)
  image: ko://github.com/kubearchive/kubearchive/cmd/operator

# values used to create a PostgreSQL database
database:
  # Controls if the database is deployed or not. The secret with the credentials
  # is deployed always, as the sink and the api-server need to connect somewhere.
  # Provde the proper `url` and credentials if you provide your database
  # TODO: set 'enabled' to 'false' when we start distributing the chart for production installation
  enabled: true

  name: "{{ .Release.Name }}-database"
  url: "{{ tpl .Values.database.name . }}.{{ .Release.Namespace }}.svc.cluster.local"
  # number of database pods that should be deployed
  replicaCount: 1
  # database container image
  image:
    repository: postgres
    pullPolicy: IfNotPresent
    tag: "16"
  # database volumes
  volumes:
    name: "postgresdata"
    storage: "5Gi"
  # database service
  service:
    type: NodePort
    port: 5432
  # database secret
  secret: "{{ tpl .Values.database.name . }}-credentials"
  # database basic configuration
  postgresData:
    # database name
    dbName: "postgresdb"
    # database user
    dbUser: "ps_user"
    # database password
    dbPassword: "P0stgr3sdbP@ssword"  # notsecret
