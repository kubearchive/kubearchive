# Copyright KubeArchive Authors
# SPDX-License-Identifier: Apache-2.0
---
role: Agent
env:
  - name: LOKI_USERNAME
    valueFrom:
      secretKeyRef:
        name: loki-basic-auth
        key: USERNAME
  - name: LOKI_PASSWORD
    valueFrom:
      secretKeyRef:
        name: loki-basic-auth
        key: PASSWORD
  - name: VECTOR_LOG
    value: "info"
customConfig:
  data_dir: /vector-data-dir
  api:
    enabled: true
    address: 127.0.0.1:8686
    playground: false
  sources:
    k8s_logs:
      type: kubernetes_logs
      rotate_wait_secs: 5
      glob_minimum_cooldown_ms: 500
      max_line_bytes: 3145728
      auto_partial_merge: true
  transforms:
    reduce_events:
      type: reduce
      inputs:
        - k8s_logs
      group_by:
        - file
      flush_period_ms: 2000
      end_every_period_ms: 2000
      merge_strategies:
        message: concat_newline
    remap_app_logs:
      type: remap
      inputs:
        - reduce_events
      source: |-
        .tmp = del(.)
        # Extract only pod-uid and container for Loki labels
        if exists(.tmp.kubernetes.pod_uid) {
          .pod_id = del(.tmp.kubernetes.pod_uid)
        } else {
          .pod_id = "unknown_pod_id"
        }
        if exists(.tmp.kubernetes.container_name) {
          .container = del(.tmp.kubernetes.container_name)
        } else {
          .container = "unknown_container"
        }
        # Handle message field
        if exists(.tmp.message) {
          .message = to_string(del(.tmp.message)) ?? "no_message"
        } else {
          .message = "no_message"
        }
        # Basic data sanitization to prevent 400 errors
        # Truncate very long messages
        if length(.message) > 32768 {
          .message = slice!(.message, 0, 32768) + "...[TRUNCATED]"
        }
        # Clean up temporary fields
        del(.tmp)
  sinks:
    loki:
      type: loki
      inputs: ["remap_app_logs"]
      endpoint: http://loki-gateway.grafana-loki.svc.cluster.local
      encoding:
        codec: "json"
      auth:
        strategy: "basic"
        user: "${LOKI_USERNAME}"
        password: "${LOKI_PASSWORD}"
      tenant_id: "kubearchive"
      request:
        headers:
          X-Scope-OrgID: kubearchive
        retry_attempts: 3
        retry_initial_backoff_secs: 1
        retry_max_duration_secs: 10
        timeout_secs: 30
      batch:
        max_events: 100
        timeout_secs: 5
        max_bytes: 1048576  # 1MB
      labels:
        pod_id: "{{`{{ pod_id }}`}}"
        container: "{{`{{ container }}`}}"
image:
  repository: quay.io/kubearchive/vector
  tag: 0.46.1-distroless-libc
  pullPolicy: IfNotPresent
  base: "debian"
