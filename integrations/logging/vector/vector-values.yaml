---
role: Agent
customConfig:
  data_dir: /vector-data-dir
  api:
    enabled: true
    address: 127.0.0.1:8686
    playground: false
  sources:
    k8s_logs:
      type: kubernetes_logs
      rotate_wait_secs: 5
      glob_minimum_cooldown_ms: 500
      max_line_bytes: 3145728
      auto_partial_merge: true
  transforms:
    reduce_events:
      type: reduce
      inputs:
        - k8s_logs
      group_by:
        - file
      flush_period_ms: 2000
      end_every_period_ms: 2000
      merge_strategies:
        message: concat_newline
    remap_app_logs:
      type: remap
      inputs:
        - reduce_events
      source: |-
        .tmp = del(.)
        # Handling Tekton-specific labels
        if exists(.tmp.kubernetes.pod_labels."tekton.dev/taskRunUID") {
          .taskRunUID = del(.tmp.kubernetes.pod_labels."tekton.dev/taskRunUID")
        } else {
          .taskRunUID = "none"
        }
        if exists(.tmp.kubernetes.pod_labels."tekton.dev/pipelineRunUID") {
          .pipelineRunUID = del(.tmp.kubernetes.pod_labels."tekton.dev/pipelineRunUID")
          .result = .pipelineRunUID
        } else {
          .result = .taskRunUID
        }
        # Handling general Kubernetes labels
        if exists(.tmp.kubernetes.pod_labels) {
          .pod_labels = .tmp.kubernetes.pod_labels
        } else {
          .pod_labels = "no_labels"
        }
        if exists(.tmp.kubernetes.pod_namespace) {
          .namespace = del(.tmp.kubernetes.pod_namespace)
        } else {
          .namespace = "unlabeled"
        }
        # General Kubernetes container name
        if exists(.tmp.kubernetes.container_name) {
          .container = del(.tmp.kubernetes.container_name)
        } else {
          .container = "unknown_container"
        }
        # General message field handling
        if exists(.tmp.message) {
          .message = del(.tmp.message)
        } else {
          .message = "no_message"
        }
        # Clean up temporary fields
        del(.tmp)

  sinks:
    loki:
      type: loki
      inputs: ["remap_app_logs"]
      endpoint: "http://loki.grafana-loki.svc.cluster.local:3100"
      encoding: 
        codec: "raw_message"
      labels:
          namespace: .kubernetes.namespace_name
          pod: .kubernetes.pod_name
          container: .kubernetes.container_name
image:
  repository: quay.io/obetsun/vector
  tag: latest
  pullPolicy: IfNotPresent
  base: "debian"

